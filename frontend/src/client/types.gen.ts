// This file is auto-generated by @hey-api/openapi-ts

export type ConversationPublic = {
    title?: string | null;
    id: string;
    created_at: string;
    user_id: string;
    messages?: Array<MessagePublic>;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type MessageCreate = {
    content: string;
    role: MessageRole;
    message_data?: {
        [key: string]: unknown;
    } | null;
};

export type MessagePublic = {
    content: string;
    role: MessageRole;
    id: string;
    created_at: string;
};

export type MessageRole = 'user' | 'assistant' | 'system';

export type UserPublic = {
    username: string;
    email: string;
    id: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type StartConversationV1NewPostData = {
    body: MessageCreate;
    path?: never;
    query: {
        user_id: string;
    };
    url: '/v1/new';
};

export type StartConversationV1NewPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type StartConversationV1NewPostError = StartConversationV1NewPostErrors[keyof StartConversationV1NewPostErrors];

export type StartConversationV1NewPostResponses = {
    /**
     * Successful Response
     */
    200: ConversationPublic;
};

export type StartConversationV1NewPostResponse = StartConversationV1NewPostResponses[keyof StartConversationV1NewPostResponses];

export type GetConversationsV1ConversationsGetData = {
    body?: never;
    path?: never;
    query: {
        user_id: string;
    };
    url: '/v1/conversations';
};

export type GetConversationsV1ConversationsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetConversationsV1ConversationsGetError = GetConversationsV1ConversationsGetErrors[keyof GetConversationsV1ConversationsGetErrors];

export type GetConversationsV1ConversationsGetResponses = {
    /**
     * Successful Response
     */
    200: Array<ConversationPublic>;
};

export type GetConversationsV1ConversationsGetResponse = GetConversationsV1ConversationsGetResponses[keyof GetConversationsV1ConversationsGetResponses];

export type ContinueConversationV1ConversationsPostData = {
    body: MessageCreate;
    path?: never;
    query: {
        conversation_id: string;
    };
    url: '/v1/conversations';
};

export type ContinueConversationV1ConversationsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ContinueConversationV1ConversationsPostError = ContinueConversationV1ConversationsPostErrors[keyof ContinueConversationV1ConversationsPostErrors];

export type ContinueConversationV1ConversationsPostResponses = {
    /**
     * Successful Response
     */
    200: ConversationPublic;
};

export type ContinueConversationV1ConversationsPostResponse = ContinueConversationV1ConversationsPostResponses[keyof ContinueConversationV1ConversationsPostResponses];

export type GetUserByNameV1NameGetData = {
    body?: never;
    path?: never;
    query: {
        user_name: string;
    };
    url: '/v1/name';
};

export type GetUserByNameV1NameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserByNameV1NameGetError = GetUserByNameV1NameGetErrors[keyof GetUserByNameV1NameGetErrors];

export type GetUserByNameV1NameGetResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type GetUserByNameV1NameGetResponse = GetUserByNameV1NameGetResponses[keyof GetUserByNameV1NameGetResponses];

export type ClientOptions = {
    baseURL: 'http://localhost:8000' | (string & {});
};
